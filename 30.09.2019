	include <iostream>
#include <random>
#include <math.h>
#include <ctime>

int random_num(int min, int max)
{
	std::random_device rd;
	std::mt19937 mersenne(rd());
	srand(mersenne());
	static const double fraction = 1.0 / (static_cast <double>(RAND_MAX) + 1.0);
	return static_cast<int>(fraction * rand() * (max - min + 1) + min);
}

int main()
{
	//massive
	/*int ar2[15] = { 1,3,4,5,6,8,7,4,31,421,321,32,2,3,4};
	int min=ar2[0];
	for (int i = 1; i < 15; ++i)
	{
		if (ar2[i] < min)
			min = ar2[i];
	}
	std::cout << min<<std::endl;*///№1



	/*int ar2[16] = { 1,1,3,4,5,6,8,7,4,31,421,321,32,2,3,4};
	int min=ar2[0];
	for (int i = 0; i < 16; ++i)
	{
		if (ar2[i] < min)
			min = ar2[i];
	}
	std::cout << "The lowest nomber:";
	for (int i = 0; i < 16; ++i)
	{
		if (ar2[i] == min)
			std::cout<<" "<<ar2[i];
	}
	std::cout << std::endl; *///№2



	/*int ar2[16] = { 1,1,3,4,5,6,8,7,4,31,421,321,32,2,3,4};
	int massive[16];
	int k = 0;
	int min=ar2[0];
	for (int i = 0; i < 16; ++i)
	{
		if (ar2[i] < min)
			min = ar2[i];
	}
	for (int i = 0; i < 16; ++i)
	{
		if (ar2[i] == min)
		{
			massive[k] = i;
			++k;
		};
	}
	std::cout << std::endl; *///№3



	/*srand(time(0));
	int min;
	int max;
	long int sred=0;
	int ar[10] = { rand()};
	for (int i = 0; i < 10; ++i)
	{
		sred += ar[i];
	}
	std::cout << "Sred=" << sred / 10 << std::endl;*///№4



	/*const int size = 3;
	unsigned int massive1[size] = { 5,7,12 };
	unsigned int massive2[size] = { 10,3,8 };
	unsigned int massive3[size] = {0,0,0};
	int k=0;
	for (int i = (size - 1); i >= 0; i--)
	{
		for (int j = 0; j < 32; j++)
		{
			massive3[i] += pow(2, j) * (((massive1[i] % 2) + (massive2[i] % 2) + k) % 2);
			if (((massive1[i] % 2) + (massive2[i] % 2) + k) > =2)
				k = 1;
			else k = 0;
			massive1[i] /= 2;
			massive2[i] /= 2;
		};
		std::cout << massive3[i] << std::endl;
	}*///№5



	/*const int n = 11;
	srand(time(0));
	int k = 0;
	int ar[n] = {rand()};
	for (int i = 0; i <(n/2+1) ; i++)
	{
		k = ar[i];
		ar[i] = ar[n-1 - i];
		ar[n - 1-i] = k;
	}
	for (int i = 0; i < 11; i++)
	{
		std::cout << " " << ar[i];
	}
	std::cout << std::endl;
	*///№6



	/*const int n = 5;
	const int m = 2;
	int k = 0;
	long int massive[n][m] = { {1,2},{3,4},{5,6},{7,8},{9,10} };
	for (int i = 0; i < n/2; i++)
		for (int j = 0; j < m; j++)
		{
			k = massive[i][j];
			massive[i][j] = massive[n - 1 - i][j];
			massive[n - 1 - i][j]=k;
		}
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < m; j++)
			std::cout << " " << massive[i][j];
		std::cout << std::endl;
	}
	std::cout << std::endl;*///№7



	/*const int n = 3;
	int k = 0;
	long int massive[n][n] = { {1,2,3},{4,5,6},{7,8,9} };
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n; j++)
			std::cout << " " << massive[i][j];
		std::cout << std::endl;
	}
	std::cout << std::endl;
	for (int i = 0; i < n / 2; i++)
		for (int j = 0; j < n; j++)
		{
			k = massive[i][j];
			massive[i][j] = massive[n - 1 - i][j];
			massive[n - 1 - i][j] = k;
		};
	for (int i = 0; i < n ; i++)
		for (int j = 0; j < n/2; j++)
		{
			k = massive[i][j];
			massive[i][j] = massive[i][n - 1 - j];
			massive[i][n - 1 - j] = k;
		};
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n; j++)
				std::cout << " " << massive[i][j];
		std::cout<<std::endl;
	}
	std::cout << std::endl;*///№8
	return 0;
}
