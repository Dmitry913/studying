#include <iostream>
#include <cmath>
#include <random>

int getRandEl()
{
	std::random_device rd;
	std::mt19937 mersenne(rd());
	const double persent = 1.0 / pow(2, 32);
	return static_cast<int>(persent * mersenne() * (1000 + 1));
}

int main()
{
	//1
	/*int N = 0;
	std::cin >> N;
	int* array = new int[N];
	for (size_t i = 0; i < N; ++i)
		std::cin >> array[i];
	int* new_array = new int[N] {'\0'};
	new_array[0] = array[N-1];
	for (size_t i = 1; i < N; ++i)
		if (array[N - i] != array[N-i-1])
			new_array[i] = array[N - i-1];
	for (size_t i = 0; i < N && new_array[i]!='\0'; ++i)
		std::cout << new_array[i]<<"\t";*/

	//2
	/*int array[10][10]{ 0 };
	for (size_t i = 0; i < 10; ++i)
	{
		for (size_t j = 0; j < 10; ++j)
		{
			array[i][j] = getRandEl();
			std::cout << array[i][j] << "\t";
		}
		std::cout << std::endl;
	}
		std::cout << std::endl;
		std::cout << std::endl;
		std::cout << std::endl;
	size_t i = 1;
	while (i != 0)
	{
		i = 0;
		for (size_t j = 0; j < 99; ++j)
			if (array[j / 10][j % 10] < array[(j + 1) / 10][(j + 1) % 10])
			{
				std::swap(array[j / 10][j % 10], array[(j + 1) / 10][(j + 1) % 10]);
				i++;
			}
	}
	for (i = 1; i < 10; ++i)
		std::swap(array[0][i], array[i][i]);
	for (size_t i = 0; i < 10; ++i)
	{
		for (size_t j = 0; j < 10; ++j)
		{
			std::cout << array[i][j] << "\t";
		}
		std::cout << std::endl;
	};*/

	//3

	size_t N = 0;
	std::cin >> N;
	int* array = new int[2 * N];
	unsigned long long int result = 1;
	for (size_t i = 0; i < 2 * N; ++i)
	{
		std::cin >> array[i];
		result *= array[i];
	}
	const unsigned long int product = round(pow(result, 1.0 / N));
	std::cout << "Product= " << product<<std::endl;
	for(size_t i=0;i<2*N;++i)
		if(array[i]!=0)
		for (size_t j = i; j < 2 * N; ++j)
		{
			if (product == array[i] * array[j])
			{
				std::cout << "combo: " << array[i] << "\t" << array[j] << std::endl;
				array[j] = 0;
			}
		}
	return 0;
}
